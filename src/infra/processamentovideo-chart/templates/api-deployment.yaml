apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.deployment.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.name }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      volumes:
        - name: aws-iam-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: "sts.amazonaws.com"
                  expirationSeconds: 86400
                  path: token
      containers:
        - name: {{ .Values.deployment.name }}
          image: "{{ .Values.deployment.image }}"
          volumeMounts:
            - name: aws-iam-token
              mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
              readOnly: true
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 30  
            periodSeconds: 10        
            timeoutSeconds: 5        
            failureThreshold: 2     
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10  
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 2
          resources:
            requests:
              cpu: "512m"
              memory: "512Mi"
            limits:
              cpu: "2048m"
              memory: "2048Mi"
          env:
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.name }}
                  key: AWS_REGION
            - name: AWS_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.name }}
                  key: AWS_SERVICE_URL
            - name: AWS_QUEUE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.name }}
                  key: AWS_QUEUE
